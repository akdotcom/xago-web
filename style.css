body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f0f0f0;
    color: #333;
    display: flex;
    flex-direction: column;
    align-items: center;
}

header {
    background-color: #4CAF50;
    color: white;
    padding: 1em 0;
    text-align: center;
    width: 100%;
}

main {
    width: 90%;
    max-width: 1200px;
    margin: 20px auto;
}

#game-info {
    background-color: #fff;
    padding: 15px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    margin-bottom: 20px;
    text-align: center;
}

#game-info p {
    margin: 5px 0;
}

#game-board {
    width: 600px; /* Adjust as needed */
    height: 500px; /* Adjust as needed */
    margin: 20px auto;
    background-color: #ddd;
    border: 2px solid #aaa;
    position: relative; /* For positioning tiles absolutely */
    border-radius: 8px;
    overflow: hidden; /* In case tiles go slightly out */
    display: grid; /* Using grid for simplicity for now, might change to SVG or canvas */
    /* For a hex grid, this will need more complex setup or a library. */
    /* For now, a simple grid to place tile elements. */
    grid-template-columns: repeat(10, 1fr); /* Example: 10x10 grid */
    grid-template-rows: repeat(10, 1fr);
    gap: 2px;
}

.board-cell { /* If we use explicit cells for the board */
    background-color: #eee;
    border: 1px solid #ccc;
    display: flex;
    align-items: center;
    justify-content: center;
}

#player-hands {
    display: flex;
    justify-content: space-around;
    margin-top: 20px;
}

.player-hand {
    background-color: #fff;
    padding: 15px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    width: 45%;
}

.player-hand h2 {
    text-align: center;
    margin-top: 0;
    color: #555;
}

.tiles-container {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    justify-content: center;
    min-height: 100px; /* To give some space even when empty */
    padding: 10px;
    border: 1px dashed #ccc;
    border-radius: 4px;
}

/* Basic Hexagon Tile Styling - This will need significant work for true hex shapes and edges */
.hexagon-tile {
    width: 80px; /* Approximate width */
    height: 92.38px; /* Approximate height for a regular hexagon (width * sqrt(3)/2 * 1.15) - simplified */
    background-color: #ccc; /* Default, will be overridden by player color */
    position: relative; /* For edge indicators */
    margin: 5px;
    cursor: pointer;
    /* A simple rectangular representation for now. True hexagons are complex with CSS. */
    border: 1px solid #333;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 10px; /* For tile ID or other info */
    box-sizing: border-box;
}

.hexagon-tile.player1 {
    background-color: lightblue; /* Player 1 color */
}

.hexagon-tile.player2 {
    background-color: lightcoral; /* Player 2 color */
}

/* Placeholder for edge indicators (triangles/blanks) */
/* This will need to be more sophisticated, perhaps using ::before/::after pseudo-elements or SVG */
.edge {
    position: absolute;
    width: 10px;
    height: 10px;
    font-size: 12px;
    text-align: center;
    line-height: 10px;
}

/* Example for top edge, this is highly simplified */
.edge-0 { top: 0; left: 50%; transform: translateX(-50%); }
.edge-1 { top: 25%; right: 0; transform: translateY(-50%) rotate(60deg); } /* Approximate */
.edge-2 { bottom: 25%; right: 0; transform: translateY(50%) rotate(120deg); } /* Approximate */
.edge-3 { bottom: 0; left: 50%; transform: translateX(-50%) rotate(180deg); }
.edge-4 { bottom: 25%; left: 0; transform: translateY(50%) rotate(240deg); } /* Approximate */
.edge-5 { top: 25%; left: 0; transform: translateY(-50%) rotate(300deg); } /* Approximate */

.triangle::before {
    content: "â–²"; /* Triangle symbol */
}
.blank::before {
    content: " "; /* Blank (or could be different symbol/style) */
}


footer {
    margin-top: 30px;
    padding: 10px;
    text-align: center;
    width: 100%;
}

#reset-game {
    padding: 10px 20px;
    font-size: 16px;
    color: white;
    background-color: #f44336;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

#reset-game:hover {
    background-color: #d32f2f;
}

/* More specific styling for actual hexagons if using CSS clip-path or SVG */
/* For example, using clip-path:
.hex {
    width: 100px;
    height: 115.47px; // height = width / sqrt(3) * 2, or width * 1.1547
    background-color: yellow;
    clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
    position: relative;
}
This will be applied dynamically via JS or by having specific classes for tiles.
*/

/* Styling for selected tile */
.hexagon-tile.selected {
    border: 3px solid gold;
    box-shadow: 0 0 10px gold;
}

/* Styling for potential drop zones on the board */
.drop-target {
    background-color: rgba(0, 255, 0, 0.3); /* Light green highlight */
    border: 2px dashed green;
}
