body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f0f0f0;
    color: #333;
    display: flex;
    flex-direction: column;
    align-items: center;
}

header {
    background-color: #4CAF50;
    color: white;
    padding: 1em 0;
    text-align: center;
    width: 100%;
}

main {
    width: 90%;
    max-width: 1200px;
    margin: 20px auto;
}

#game-info {
    background-color: #fff;
    padding: 15px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    margin-bottom: 20px;
    text-align: center;
}

#game-info p {
    margin: 5px 0;
}

#game-board {
    width: 600px; /* Adjust as needed */
    height: 500px; /* Adjust as needed */
    margin: 20px auto;
    background-color: #ddd;
    border: 2px solid #aaa;
    position: relative; /* For positioning tiles absolutely */
    border-radius: 8px;
    overflow: hidden; /* In case tiles go slightly out */
    display: grid; /* Using grid for simplicity for now, might change to SVG or canvas */
    /* For a hex grid, this will need more complex setup or a library. */
    /* For now, a simple grid to place tile elements. */
    grid-template-columns: repeat(10, 1fr); /* Example: 10x10 grid */
    grid-template-rows: repeat(10, 1fr);
    gap: 2px;
}

.board-cell { /* If we use explicit cells for the board */
    background-color: #eee;
    border: 1px solid #ccc;
    display: flex;
    align-items: center;
    justify-content: center;
}

#player-hands {
    display: flex;
    justify-content: space-around;
    margin-top: 20px;
}

.player-hand {
    background-color: #fff;
    padding: 15px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    width: 45%;
}

.player-hand h2 {
    text-align: center;
    margin-top: 0;
    color: #555;
}

.tiles-container {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    justify-content: center;
    min-height: 100px; /* To give some space even when empty */
    padding: 10px;
    border: 1px dashed #ccc;
    border-radius: 4px;
}

/* Basic Hexagon Tile Styling - This will need significant work for true hex shapes and edges */
.hexagon-tile {
    width: 80px; /* Flat-to-flat width for a flat-top hexagon */
    height: 92.38px; /* Vertex-to-vertex height (width / (sqrt(3)/2)) */
    /* background-color: #ccc; */ /* Player color will override this */
    position: relative; /* For edge indicators */
    margin: 5px; /* Keep margin for spacing in hand */
    cursor: pointer;
    clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%); /* Flat-top hexagon */
    /* border: 1px solid #333; */ /* Clip-path makes border look weird */
    display: flex; /* Kept for potential future direct children, though edges are absolute */
    align-items: center; /* Kept for potential future direct children */
    justify-content: center; /* Kept for potential future direct children */
    font-size: 10px; /* For tile ID or other info - this will be hidden by edges */
    box-sizing: border-box;
}

.hexagon-tile.player1 {
    background-color: lightblue; /* Player 1 color */
}

.hexagon-tile.player2 {
    background-color: lightcoral; /* Player 2 color */
}

/* New styles for hexagon edges */
.hexagon-edge {
    position: absolute;
    width: 0; /* For triangles made with borders */
    height: 0; /* For triangles made with borders */
    box-sizing: border-box;
}

.edge-blank {
    /* A line representing the blank edge */
    /* For a side length of approx 46px, 80% is ~37px */
    /* This will be a line of width ~37px and height (thickness) 2px */
    /* Positioning will be handled by edge-N classes */
}

.edge-triangle {
    /* Triangle points outwards from the center of the hexagon */
    /* Base width of triangle: 36.95px (approx 37px) */
    /* Height of triangle (arbitrary, e.g., 10px) */
    /* Using border technique: width is 0, height is 0 */
    width: 0;
    height: 0;
    border-left: 18.475px solid transparent; /* TBW/2 */
    border-right: 18.475px solid transparent; /* TBW/2 */
    border-bottom: 10px solid black; /* TH and color */
    /* The border perpendicular to the direction of the triangle defines its height */
    /* The borders parallel to the direction define half its base */
}

/*
Hexagon properties (flat-top):
Tile Width (flat-to-flat): 80px (let's call it W)
Tile Height (vertex-to-vertex): 92.38px (let's call it H)
Side Length (S): 46.19px (H/2 or W/sqrt(3))

Triangle Base Width (TBW): 0.8 * S = 36.95px (Using approx 37px for calculations)
Triangle Height (TH): Let's choose 10px for visual appearance.

For .edge-blank, we'll create a line.
Line Width (LW): TBW = 36.95px
Line Thickness (LT): 2px
*/

/* Positioning strategy for edges:
   Each edge container (.edge-N) will be positioned at the center of the hexagon tile.
   Then, we use translate and rotate to move it to the edge and orient it.
   The triangle itself (.edge-triangle) is defined to point "up" (border-bottom creates the shape).
   Rotations will correctly orient this upward-pointing triangle.
*/

.edge-0, .edge-1, .edge-2, .edge-3, .edge-4, .edge-5 {
    position: absolute; /* Ensure this is set for the edge containers if not already */
    left: 50%;
    top: 50%;
    /* transform-origin: center center; */ /* Default, but good to be explicit if needed */
}

/* Edge 0: Top */
/* Triangle points up. Needs to be moved to top edge. Translate Y by -(SideLength + TriangleHeight/2) approx */
/* More accurately, translate Y by -(HexRadius + TriangleHeight) then adjust. HexRadius = SideLength = H/2 */
.edge-0.edge-blank {
    width: 36.95px; height: 2px; background-color: #555;
    transform: translate(-50%, -50%) translateY(calc(-46.19px + 1px)); /* Centered on edge */
}
.edge-0.edge-triangle {
    /* Default triangle points up, border-bottom is the base. We want it to point outwards. */
    /* So for edge 0 (top), it should point up. translateY moves it. */
    transform: translate(-50%, -50%) translateY(calc(-46.19px - 10px)); /* S + TH */
}

/* Edge 1: Top-Right */
.edge-1.edge-blank {
    width: 36.95px; height: 2px; background-color: #555;
    transform: translate(-50%, -50%) rotate(60deg) translateY(calc(-46.19px + 1px));
}
.edge-1.edge-triangle {
    transform: translate(-50%, -50%) rotate(60deg) translateY(calc(-46.19px - 10px));
}

/* Edge 2: Bottom-Right */
.edge-2.edge-blank {
    width: 36.95px; height: 2px; background-color: #555;
    transform: translate(-50%, -50%) rotate(120deg) translateY(calc(-46.19px + 1px));
}
.edge-2.edge-triangle {
    transform: translate(-50%, -50%) rotate(120deg) translateY(calc(-46.19px - 10px));
}

/* Edge 3: Bottom */
.edge-3.edge-blank {
    width: 36.95px; height: 2px; background-color: #555;
    transform: translate(-50%, -50%) rotate(180deg) translateY(calc(-46.19px + 1px));
}
.edge-3.edge-triangle {
    transform: translate(-50%, -50%) rotate(180deg) translateY(calc(-46.19px - 10px));
}

/* Edge 4: Bottom-Left */
.edge-4.edge-blank {
    width: 36.95px; height: 2px; background-color: #555;
    transform: translate(-50%, -50%) rotate(240deg) translateY(calc(-46.19px + 1px));
}
.edge-4.edge-triangle {
    transform: translate(-50%, -50%) rotate(240deg) translateY(calc(-46.19px - 10px));
}

/* Edge 5: Top-Left */
.edge-5.edge-blank {
    width: 36.95px; height: 2px; background-color: #555;
    transform: translate(-50%, -50%) rotate(300deg) translateY(calc(-46.19px + 1px));
}
.edge-5.edge-triangle {
    transform: translate(-50%, -50%) rotate(300deg) translateY(calc(-46.19px - 10px));
}

/* Remove old placeholder styles */
/*
.edge {
    position: absolute;
    width: 10px;
    height: 10px;
    font-size: 12px;
    text-align: center;
    line-height: 10px;
}
.edge-0 { top: 0; left: 50%; transform: translateX(-50%); }
.edge-1 { top: 25%; right: 0; transform: translateY(-50%) rotate(60deg); }
.edge-2 { bottom: 25%; right: 0; transform: translateY(50%) rotate(120deg); }
.edge-3 { bottom: 0; left: 50%; transform: translateX(-50%) rotate(180deg); }
.edge-4 { bottom: 25%; left: 0; transform: translateY(50%) rotate(240deg); }
.edge-5 { top: 25%; left: 0; transform: translateY(-50%) rotate(300deg); }

.triangle::before {
    content: "â–²";
}
.blank::before {
    content: " ";
}
*/
footer {
    margin-top: 30px;
    padding: 10px;
    text-align: center;
    width: 100%;
}

#reset-game {
    padding: 10px 20px;
    font-size: 16px;
    color: white;
    background-color: #f44336;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

#reset-game:hover {
    background-color: #d32f2f;
}

/* More specific styling for actual hexagons if using CSS clip-path or SVG */
/* For example, using clip-path:
.hex {
    width: 100px;
    height: 115.47px; // height = width / sqrt(3) * 2, or width * 1.1547
    background-color: yellow;
    clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
    position: relative;
}
This will be applied dynamically via JS or by having specific classes for tiles.
*/

/* Styling for selected tile */
.hexagon-tile.selected {
    border: 3px solid gold;
    box-shadow: 0 0 10px gold;
}

/* Styling for potential drop zones on the board */
.drop-target {
    background-color: rgba(0, 255, 0, 0.3); /* Light green highlight */
    border: 2px dashed green;
}
